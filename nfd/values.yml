enableNodeFeatureApi: true
priorityClassName: system-node-critical
gc:
  enable: true
  replicaCount: 2
  serviceAccount:
    name: node-feature-discovery
    create: false
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
  tolerations:
    - operator: "Exists"
worker:
  serviceAccount:
    name: node-feature-discovery
    # disable creation to avoid duplicate serviceaccount creation by master spec below
    create: false
  tolerations:
    - operator: "Exists"
  config:
    sources:
      pci:
        deviceClassWhitelist:
          - "02"
          - "0200"
          - "0207"
          - "0300"
          - "0302"
        deviceLabelFields:
          - vendor
master:
  replicaCount: 2
  serviceAccount:
    name: node-feature-discovery
    create: true
  config:
    extraLabelNs: ["nvidia.com", "node-role.kubernetes.io", "node.kubernetes.io", "beta.kubernetes.io"]
    restrictions:
      allowOverride: true
    # noPublish: false
    # resourceLabels: ["nvidia.com/feature-1","nvidia.com/feature-2"]
    # enableTaints: false
    # labelWhiteList: "nvidia.com/gpu
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
  tolerations:
    - operator: "Exists"
  resources:
    limits:
      memory: 30Gi
    requests:
      cpu: 100m
      # You may want to use the same value for `requests.memory` and `limits.memory`. The “requests” value affects scheduling to accommodate pods on nodes.
      # If there is a large difference between “requests” and “limits” and nodes experience memory pressure, the kernel may invoke
      # the OOM Killer, even if the memory does not exceed the “limits” threshold. This can cause unexpected pod evictions. Memory
      # cannot be compressed and once allocated to a pod, it can only be reclaimed by killing the pod.
      # Natan Yellin 22/09/2022 https://home.robusta.dev/blog/kubernetes-memory-limit
      memory: 10Gi
